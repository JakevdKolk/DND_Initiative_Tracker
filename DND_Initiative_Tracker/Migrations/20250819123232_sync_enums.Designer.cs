// <auto-generated />
using DND_Initiative_Tracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DND_Initiative_Tracker.Migrations
{
    [DbContext(typeof(DnDDbContext))]
    [Migration("20250819123232_sync_enums")]
    partial class sync_enums
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "action_type", new[] { "action", "bonus_action", "reaction", "trait", "legendary_action", "lair_action", "mythical_action" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "damage_type_category", new[] { "resistant", "vulnerable", "immune", "none" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "death_status", new[] { "stable", "alive", "dying", "dead" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "size", new[] { "Tiny", "Small", "Medium", "Large", "Huge", "Gargantuan" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "public", "skill_type", new[] { "skill", "tool", "instrument" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Drive_Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Vtt_link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("campaign");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.CampaignUser", b =>
                {
                    b.Property<int>("CampaignId")
                        .HasColumnType("integer")
                        .HasColumnName("campaign_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("CampaignId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("campaign_user", (string)null);
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Creature", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("ac")
                        .HasColumnType("integer");

                    b.Property<int>("hp")
                        .HasColumnType("integer");

                    b.Property<int>("hp_dice_bonus")
                        .HasColumnType("integer");

                    b.Property<int>("hp_dice_count")
                        .HasColumnType("integer");

                    b.Property<int>("hp_dice_size")
                        .HasColumnType("integer");

                    b.Property<int>("initiative_bonus")
                        .HasColumnType("integer");

                    b.Property<bool>("is_npc")
                        .HasColumnType("boolean");

                    b.Property<int>("lair_initiative")
                        .HasColumnType("integer");

                    b.Property<int>("legendary_action_charges")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("owner_user_id")
                        .HasColumnType("integer");

                    b.Property<int>("profiency_bonus")
                        .HasColumnType("integer");

                    b.Property<int>("type_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("owner_user_id");

                    b.HasIndex("type_id");

                    b.ToTable("creature");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.CreatureEncounter", b =>
                {
                    b.Property<int>("creature_id")
                        .HasColumnType("integer");

                    b.Property<int>("encounter_id")
                        .HasColumnType("integer");

                    b.Property<int>("current_hp")
                        .HasColumnType("integer");

                    b.Property<double>("initiative")
                        .HasColumnType("double precision");

                    b.Property<int>("temp_hp")
                        .HasColumnType("integer");

                    b.HasKey("creature_id", "encounter_id");

                    b.HasIndex("encounter_id");

                    b.ToTable("creature_encounter", (string)null);
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.CreatureType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("creature_type");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Encounter", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("campaign_id")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("turn_count")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("campaign_id");

                    b.ToTable("encounter");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("role");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("role_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("app_user");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.CampaignUser", b =>
                {
                    b.HasOne("DND_Initiative_Tracker.Models.Campaign", "Campaign")
                        .WithMany("CampaignUsers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DND_Initiative_Tracker.Models.User", "User")
                        .WithMany("CampaignUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Creature", b =>
                {
                    b.HasOne("DND_Initiative_Tracker.Models.User", "User")
                        .WithMany("Creatures")
                        .HasForeignKey("owner_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DND_Initiative_Tracker.Models.CreatureType", "CreatureType")
                        .WithMany("Creatures")
                        .HasForeignKey("type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatureType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.CreatureEncounter", b =>
                {
                    b.HasOne("DND_Initiative_Tracker.Models.Creature", "Creature")
                        .WithMany("CreatureEncounters")
                        .HasForeignKey("creature_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DND_Initiative_Tracker.Models.Encounter", "Encounter")
                        .WithMany("CreatureEncounters")
                        .HasForeignKey("encounter_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creature");

                    b.Navigation("Encounter");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Encounter", b =>
                {
                    b.HasOne("DND_Initiative_Tracker.Models.Campaign", "Campaign")
                        .WithMany("Encounters")
                        .HasForeignKey("campaign_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.User", b =>
                {
                    b.HasOne("DND_Initiative_Tracker.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Campaign", b =>
                {
                    b.Navigation("CampaignUsers");

                    b.Navigation("Encounters");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Creature", b =>
                {
                    b.Navigation("CreatureEncounters");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.CreatureType", b =>
                {
                    b.Navigation("Creatures");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Encounter", b =>
                {
                    b.Navigation("CreatureEncounters");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DND_Initiative_Tracker.Models.User", b =>
                {
                    b.Navigation("CampaignUsers");

                    b.Navigation("Creatures");
                });
#pragma warning restore 612, 618
        }
    }
}
